name: Build OpenWRT for Orange Pi Zero

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout OpenWRT source
      uses: actions/checkout@v3
      with:
        repository: melsem/openwrt-18.06.4
        path: openwrt
        
    - name: Free Disk Space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"

    - name: Update System and Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential clang flex bison g++ gawk \
        gcc-multilib g++-multilib gettext git libncurses5-dev libssl-dev \
        python3-distutils rsync unzip zlib1g-dev file wget \
        python2.7-dev python3-setuptools ecj fastjar java-propose-classpath \
        libelf-dev subversion swig time xsltproc

    - name: Update feeds
      working-directory: openwrt
      run: |
        echo "src-git packages https://git.openwrt.org/feed/packages.git^445999bd" > feeds.conf.default
        echo "src-git luci https://git.openwrt.org/project/luci.git^fe09ab7" >> feeds.conf.default
        echo "src-git routing https://git.openwrt.org/feed/routing.git^1cc7676" >> feeds.conf.default
        echo "src-git telephony https://git.openwrt.org/feed/telephony.git^0183c1e" >> feeds.conf.default
        echo "src-git melsem https://github.com/melsem/packages.git" >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Configure OpenWRT
      working-directory: openwrt
      run: |
        cat > .config <<'EOF'
        CONFIG_TARGET_sunxi=y
        CONFIG_TARGET_sunxi_cortexa7=y
        CONFIG_TARGET_sunxi_cortexa7_DEVICE_sun8i-h2-plus-orangepi-zero=y
        CONFIG_PACKAGE_kmod-xradio=y
        CONFIG_PACKAGE_kmod-usb-core=y
        CONFIG_PACKAGE_kmod-usb-ohci=y
        CONFIG_PACKAGE_kmod-usb2=y
        CONFIG_PACKAGE_hostapd=y
        CONFIG_PACKAGE_wpa-supplicant=y
        CONFIG_PACKAGE_wireless-tools=y
        CONFIG_PACKAGE_kmod-gpio-button-hotplug=y
        CONFIG_PACKAGE_kmod-sound-core=y
        CONFIG_PACKAGE_kmod-sound-soc-sun4i-codec=y
        CONFIG_PACKAGE_kmod-sound-soc-sun8i-codec=y
        CONFIG_PACKAGE_kmod-sound-soc-sun8i-codec-analog=y
        CONFIG_PACKAGE_kmod-rtc-sunxi=y
        CONFIG_AUDIO_SUPPORT=y
        CONFIG_GPIO_SUPPORT=y
        CONFIG_USB_SUPPORT=y
        CONFIG_RTC_SUPPORT=y
        CONFIG_USES_DEVICETREE=y
        CONFIG_arm=y
        CONFIG_arm_v7=y
        CONFIG_ARCH="arm"
        CONFIG_TARGET_ROOTFS_EXT4FS=y
        CONFIG_TARGET_EXT4_BLOCKSIZE=4k
        CONFIG_TARGET_ROOTFS_SQUASHFS=y
        CONFIG_SIGNED_PACKAGES=y
        EOF
        make defconfig

    - name: Download package sources
      working-directory: openwrt
      run: make download -j8 || make download -j1 V=s

    - name: Build OpenWRT
      working-directory: openwrt
      run: |
        make -j$(nproc) || make -j1 V=s

    - name: Organize files
      working-directory: openwrt
      run: |
        mkdir -p ./artifact/firmware
        mkdir -p ./artifact/package
        cp -rf ./bin/targets/sunxi/cortexa7/* ./artifact/firmware/
        cp -rf ./bin/packages/arm_cortex-a7/* ./artifact/package/

    - name: Upload firmware
      uses: actions/upload-artifact@v3
      with:
        name: OpenWRT-OrangePiZero-Firmware
        path: openwrt/artifact/firmware/

    - name: Upload packages
      uses: actions/upload-artifact@v3
      with:
        name: OpenWRT-OrangePiZero-Packages
        path: openwrt/artifact/package/

    - name: Generate release tag
      id: tag
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "release_name=OpenWrt 18.06.4 for OPi Zero $(date +"%Y.%m.%d %H:%M")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "OpenWrt 18.06.4 for Orange Pi Zero" >> release.txt
        echo "Built on: $(date)" >> release.txt
        echo "Features:" >> release.txt
        echo "- WiFi support (xradio)" >> release.txt
        echo "- Audio support (sun8i-codec)" >> release.txt
        echo "- USB support" >> release.txt
        echo "- GPIO support" >> release.txt
        echo "- RTC support" >> release.txt
        echo "Source: melsem/openwrt-18.06.4" >> release.txt

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        name: ${{ steps.tag.outputs.release_name }}
        body_path: release.txt
        files: |
          openwrt/artifact/firmware/*squashfs-sdcard.img.gz
          openwrt/artifact/firmware/*ext4-sdcard.img.gz
          openwrt/artifact/firmware/sha256sums