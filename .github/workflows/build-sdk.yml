name: Build ImmortalWRT SDK

on:
  workflow_dispatch:

jobs:
  build-sdk:
    name: Build SDK
    runs-on: ubuntu-20.04

    steps:
      - name: Show Initial Environment
        run: |
          echo "Starting directory: $(pwd)"
          echo "Directory contents:"
          ls -la

      - name: Setup Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
          gettext git java-propose-classpath libelf-dev libncurses5-dev \
          libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \
          python3-distutils python3-setuptools python3-dev rsync subversion \
          swig time xsltproc zlib1g-dev 

      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          echo "Available disk space:"
          df -h

      - name: Clone ImmortalWRT
        run: |
          echo "Cloning ImmortalWRT..."
          git clone -b openwrt-24.10 --depth=1 https://github.com/immortalwrt/immortalwrt.git immortalwrt
          echo "Current directory: $(pwd)"
          echo "Content after clone:"
          ls -la
          cd immortalwrt
          echo "ImmortalWRT directory content:"
          ls -la

      - name: Update Feeds
        run: |
          cd immortalwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          echo "Feeds directory content:"
          ls -la feeds/

      - name: Configure SDK Build
        run: |
          cd immortalwrt
          echo "Creating .config file..."
          echo 'CONFIG_TARGET_sunxi=y' > .config
          echo 'CONFIG_TARGET_sunxi_cortexa7=y' >> .config
          echo 'CONFIG_TARGET_sunxi_cortexa7_DEVICE_xunlong_orangepi-zero=y' >> .config
          echo 'CONFIG_SDK=y' >> .config
          echo "Running defconfig..."
          make defconfig
          echo "Config file content:"
          cat .config

      - name: Build SDK
        run: |
          cd immortalwrt
          echo "Starting SDK build..."
          make tools/install -j$(nproc)
          make toolchain/install -j$(nproc)
          make target/sdk -j$(nproc) V=s
          echo "Build complete. Checking directories..."
          echo "Current directory content:"
          ls -la
          echo "Bin directory content (if exists):"
          ls -la bin/ || echo "bin directory not found"
          echo "Looking for SDK files:"
          find . -name "*sdk*.tar.xz"

      - name: Upload SDK
        uses: actions/upload-artifact@v3
        with:
          name: immortalwrt-sdk
          path: immortalwrt/bin/targets/sunxi/cortexa7/*sdk*.tar.xz
          if-no-files-found: error